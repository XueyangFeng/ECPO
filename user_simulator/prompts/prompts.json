{
    "domain_key_prompt_v0": "Using the provided seed keyword set and user reviews, refine or expand key categories within the {domain} context to accurately capture user preferences, behaviors, and communication styles. Focus on identifying characteristics inferred from the seed keywords and review data, which reflect user interests and interaction patterns relevant to {domain}, enabling effective use in a conversational recommendation system.\n\n**Instructions:**\n\n1. **Analyze the Seed Keywords**: Review each category within the seed keywords ({seed_keys}), assessing its relevance in the {domain} context. Adjust these keywords to better capture preferences, behaviors, and interaction patterns specific to {domain}, and add additional details as necessary.\n\n2. **Examine User Reviews**: Read user reviews ({user_reviews}) to identify recurring themes such as preferred styles, common expectations, response patterns, and specific likes or dislikes. Identify explicitly mentioned or implied elements that reveal users’ tastes, engagement patterns, or preferred product attributes related to {domain}.\n\n3. **Generate Domain-Specific Key Categories**:\n   - Based on the seed keywords and review data, expand or optimize categories to cover domain-specific characteristics.\n\n\n**Example:**\n\nDomain Example: The following is an example of adapted keys in the book domain. Please note that this is only a sample and should be customized according to the specific {domain}.\n\n\n{example}\n\n\n",
    "persona_rewrite_prompt_v0": "Rewrite the user persona to enhance how it reflects the user's interaction behavior within a Conversational Recommendation System (CRS), focusing on how Decision-Making Style, Interaction Preferences, Experience Feedback, and Language Expression impact CRS interactions. The rewritten persona should highlight: (1) Decision-Making Style – Describe how the user’s approach to selecting recommendations is influenced by interest, emotional resonance, or external recommendations (e.g., social or professional connections) and clarify if the user prefers quick decisions or thoughtful evaluations, including any preference for direct recommendations or further clarification. (2) Interaction Preferences – Describe the user’s proactivity and typical feedback patterns, showing if they tend to actively share insights or expect CRS to clarify needs before recommending. Specify whether the user prefers frequent, detailed interactions or quick, minimal exchanges. (3) Experience Feedback – Outline how the user’s experience feedback influences their implicit scoring for each CRS recommendation, such as assessing recommendation accuracy or evaluating the rationale behind CRS decisions (e.g., whether appropriate clarification was provided before recommending). Clarify the user’s priorities when implicitly scoring, such as content value, response speed, or alignment with interaction expectations, to help CRS better simulate user satisfaction levels. (4) Language Expression – In the Linguistic Traits, describe the user’s tone, level of detail, and emotional richness when responding, noting if they provide concise feedback or in-depth, emotionally expressive responses. Include examples to ensure CRS understands and aligns responses with the user’s style. \nOutput pure JSON data directly without using Markdown or code block formatting. Next is the persona you want to rewrite: {persona}",
    "persona_rewrite_prompt_v1": "Rewrite the user persona to better reflect interaction behavior within a Conversational Recommendation System (CRS), focusing on how Decision-Making Style, Interaction Preferences, Experience Feedback, and Language Expression impact user satisfaction and implicit scoring within the CRS. The rewritten persona should include the following aspects: (1) Decision-Making Style - Describe the user’s preferences in selecting recommendations, including whether they are influenced by personal interests, emotional resonance, or social/professional recommendations. Clarify if the user prefers quick decisions or a more thoughtful evaluation process, and specify if they expect further clarification before a recommendation. (2) Interaction Preferences - Describe the user’s level of proactivity and typical feedback patterns, indicating if they tend to actively share insights or expect the CRS to clarify needs before recommending. Specify whether the user prefers frequent, detailed interactions or quick, straightforward exchanges. (3) Experience Feedback - Describe how the user's feedback influences their implicit scoring for each CRS recommendation, considering recommendation accuracy, decision rationale (e.g., whether needs were adequately clarified beforehand), and priority aspects in implicit scoring, such as content value, response speed, and alignment with interaction expectations. Positive experiences may include satisfaction with novel content, efficient interaction, and relevance to needs, while negative experiences should highlight content mismatches or slow response times leading to lower scores. (4) Language Expression - In the Linguistic Traits, describe the user’s tone, level of detail, and emotional richness when responding, noting if they provide concise feedback or more in-depth, emotionally expressive responses. Include examples to help the CRS understand and adjust to the user's preferred communication style. Your output should look similar to this format:\n{output_example}\n\nOutput pure JSON data directly without using Markdown or code block formatting. Next is the persona you want to rewrite: {persona}",
    "persona_rewrite_prompt_v2": "Simplify and rewrite the given user persona into a concise, structured format suitable for a Conversational Recommendation System (CRS). The rewritten persona should focus on the following aspects:\n\n1. **Activities**: Summarize the user's interaction style and decision-making preferences based on three aspects: whether they are feedback-oriented or quick-decision users;  whether they lean towards receiving background information, analyzing details, and multi-dimensional comparisons, or prefer straightforward answers; and whether they expect diverse content or a single optimal recommendation. Your summary should be concise and clear (e.g., 'feedback-oriented user, prefer straightforward answers and diverse content recommendations.'). Do not provide any specific preferences here! \n\n2. **Opinions**: Summarize the user's specific positive and negative experiences in reviews or interactions with CRS recommendations.\n\n3. **Interests**: Extract the user's primary content preferences, including preferred genres (Genres), story depth (Plot Depth), and narrative pacing (Pace).\n\n4. **Linguistics**: Summarize the user's communication style, including the level of detail in their feedback, emotional tone, and style of expression.\n\nThe output format should be a JSON object structured as follows:\n{output_example}\n\nPlease output the result as pure JSON data without using Markdown or code block formatting. Ensure the rewritten persona is concise, clear, and focused solely on information relevant to CRS behavior. Next is the persona you want to rewrite: {persona}",
    "persona_rewrite_prompt_v3": "Simplify and rewrite the given user persona into concise, structured formats suitable for a Conversational Recommendation System (CRS). The rewritten persona should focus on clearly defining the user's interaction behavior (**Activities**) and language expression style (**Linguistics**). Follow these instructions:\n\n1. **Activities**: Summarize the user's interaction style and decision-making preferences based on the following three types:\n   - **Efficiency-Seeking User**: Prefers quick decisions, straightforward answers, and a single optimal recommendation.\n   - **Detail-Oriented User**: Focuses on information completeness, prefers analyzing background details and providing comprehensive feedback.\n   - **Exploration-Oriented User**: Enjoys exploring diverse options, even when needs are met.\n\n2. **Linguistics**: Independently describe the user's language expression style, focusing on the following points:\n   - **Information Density**: Does the user prefer concise and direct responses, or detailed and descriptive ones?\n   - **Emotional Tone**: Is the user's tone enthusiastic and humorous, casual and easygoing, or neutral and calm?\n   - **Expression Style**: Does the user communicate in a straightforward manner, or use more descriptive or complex language?\n\nIf the persona suggests ambiguous or mixed preferences, provide up to three possible styles, and combine them into a single JSON object under the \"Personas\" key.\n\nIf the output is a single personality,the output format should be a JSON object structured as follows:\n{output_example_one}, else: the output format should be a JSON object structured as follows:\n{output_example_three}.\n\nOutput the combined JSON object as a single valid JSON string. Please output the result as pure JSON data without using Markdown or code block formatting. The persona to rewrite is: {persona}",
    "persona_rewrite_prompt_v4": "Simplify and rewrite the given user persona into concise, structured formats suitable for a Conversational Recommendation System (CRS). The rewritten persona should focus on clearly defining the user's interaction behavior (**Activities**) and language expression style (**Linguistics**). Follow these instructions:\n\n1. **Activities**: Summarize the user's interaction style and decision-making preferences based on the following three types:\n   - **Efficiency-Seeking User**: Prefers quick decisions, straightforward answers, and a single optimal recommendation.\n   - **Detail-Oriented User**: Focuses on information completeness, prefers analyzing background details and providing comprehensive feedback.\n   - **Exploration-Oriented User**: Enjoys exploring diverse options, even when needs are met.\n\n2. **Linguistics**: Independently describe the user's language expression style, focusing on the following points:\n   - **Information Density**: Does the user prefer concise and direct responses, or detailed and descriptive ones?\n   - **Emotional Tone**: Is the user's tone enthusiastic and humorous, casual and easygoing, or neutral and calm?\n   - **Expression Style**: Does the user communicate in a straightforward manner, or use more descriptive or complex language?\n\nProvide up to two possible styles, including their normal personality and counterfactual personality(e.g. the opposite of an exploration-and-details style is efficiency-seeking). And combine them into a single JSON object under the \"Personas\" key.\n\nIf the output is a single personality,the output format should be a JSON object structured as follows:\n{output_example_one}, else: the output format should be a JSON object structured as follows:\n{output_example_three}.\n\nOutput the combined JSON object as a single valid JSON string. Please output the result as pure JSON data without using Markdown or code block formatting. The persona to rewrite is: {persona}",
    "persona_extension_prompt_v0": "Rewrite the given user persona into a concise, structured format that represents a contrasting or opposite interaction style suitable for a Conversational Recommendation System (CRS). Retain the user's Opinions (positive and negative experiences) and Interests (preferred genres, plot depth, and narrative pacing) unchanged, but modify the Activities and Linguistics to reflect an alternative interaction behavior. Focus on the following aspects:\n\n1. **Activities**: Adjust the user's interaction style and decision-making preferences to represent contrasting behaviors. For example, if the original user is “feedback-oriented user, prefers detailed background information and diverse content recommendations，rewrite it as a  quick-decision user, prefers straightforward answers and a single optimal recommendation.” .\n\n2. **Opinions**: Retain the user's specific positive and negative experiences as provided, without any modifications.\n\n3. **Interests**: Keep the user's primary content preferences unchanged, including genres, story depth, and narrative pacing.\n\n4. **Linguistics**: Rewrite the user's communication style to reflect the opposite tendencies. For example, if the original user provides highly detailed feedback, rewrite it as providing minimal or generic feedback. If the original user is emotionally expressive, rewrite it as neutral and detached. Ensure the rewritten Linguistics reflect contrasting traits while maintaining logical coherence.\n\nThe output format should be a JSON object structured as follows:\n{output_example}\n\nPlease output the result as pure JSON data without using Markdown or code block formatting. Ensure the rewritten persona clearly contrasts the original user's interaction behavior while retaining their content and experience preferences. Next is the persona you want to rewrite: {persona}",
    "domain_value_prompt_v0": "Based on the provided user reviews, complete the following JSON structure:\n{key_structure}, filling in each key category with specific information reflecting the user's preferences, behaviors, and styles in the {domain} context. Use review information to provide descriptive summaries, and where details are implied but not directly stated, make reasonable inferences.\n\nInstructions:\n\n1. Analyze the 30 user reviews provided to identify patterns, themes, or notable details that align with each key category.\n2. Where information is implied, make educated guesses based on context. For example, if the user enjoys thrillers, infer that they may prefer suspenseful or fast-paced narratives.\n3. If the provided key structure is incomplete and additional keys are necessary, start with the directive:\n\nadd_new_key: {description of additional key(s) needed}\n\n4. If the key structure is sufficient, only return the completed JSON structure. Your output should look similar to this format:\n{output_example}\n\nNext, please fill in the following user persona based on the reviews below:\n{user_reviews}\n\nFinally, here are some critical formatting notes:\n1. The persona dictionary will provide descriptions and examples; do not output them!!!\n2. Output pure JSON data directly without using Markdown or code block formatting. If no information can be inferred, use \"None\" as the value.\n",
    "user_simulator_prompt_point_v1": "You will act as a **{domain}** shopper, interacting with the recommendation system based on your provided personalized information. Each time the recommendation system responds, you should provide feedback following the steps below. Personalized Information: {persona}. Based on the above persona, generate user behavior as accurately as possible. Guidelines are as follows: 1. **Rating**: Based on your **experience feedback, content preferences, and behavioral traits**, provide a reason for your rating along with a score between [1-5]. 2. **Decision**: According to your **behavioral traits and content preferences**, select your response strategy from the following options {policy}. 3. **Response**: Based on your previous **decision**, generate a specific response according to your **linguistic traits**. Feedback Format: Strictly follow the json format below for each feedback instance: { \"reason\": \"<A specific reason explaining the user's rating and feedback>\", \"rating\": \"<A rating from 1 to 5>\", \"policy\": \"<Selected strategy type>\", \"response\": \"<A natural language response generated based on the chosen strategy>\" }. Dialogue History: {Dialogue_history}.",
    "user_simulator_prompt_binary_v1":"You will act as a **{domain}** shopper, interacting with the recommendation system based on your provided personalized information. Each time the recommendation system responds, you should provide feedback following the steps below. Personalized Information: {persona}. Based on the above persona, generate user behavior as accurately as possible. Guidelines are as follows: 1. **Rating**: Based on your **experience feedback, content preferences, and behavioral traits**, provide a reason for your rating along with a score of [0 or 1] (0 = Not Satisfied, 1 = Satisfied). 2. **Decision**: According to your **behavioral traits and content preferences**, select your response strategy from the following options {policy}. 3. **Response**: Based on your previous **decision**, generate a specific response according to your **linguistic traits**. Feedback Format: Strictly follow the format below for each feedback instance: { \"reason\": \"<A specific reason explaining the user's rating and feedback>\", \"rating\": \"<A rating of 0 or 1>\", \"policy\": \"<Selected policy>\", \"response\": \"<A natural language response generated based on the chosen strategy>\" }. Note that you always play the role of the user and all answers are from the user's perspective!!! If there is no conversation history, use the \"ask_recommendation\" or \"chitchat\" strategy to start a conversation! Do not output anything other than json!!.",
    "review_user_simulator_prompt": "You will act as a **{domain}** shopper. Based on your provided personalized information and the following item description: {item_description}, write a review for the item. Personalized Information: {persona}. Using the persona and item description, generate user feedback as accurately as possible. Guidelines are as follows: 1. **Preference**: Based on your experience feedback, content preferences, and behavioral traits, evaluate your inclination toward the item (0 for Reject, 1 for Accept). 2. **Comment**: Based on your linguistic traits, behavioral traits, and content preferences, generate a comment. Feedback Format: Submit each feedback instance strictly following the JSON format below: { \"preference\": \"<0 or 1>\", \"comment\": \"<Your one-sentence review of the item>\" }",
    "review_user_simulator_prompt_v1": "You will act as a **{domain}** shopper. Based on your provided personalized information and the following item description: {item_description}, write a review for the item. Personalized Information: {persona}. Using the persona and item description, generate user feedback as accurately as possible. Guidelines are as follows: 1. **Preference**: Based on your experience feedback, content preferences, and behavioral traits, evaluate your inclination toward the item (0 for Reject, 1 for Accept). 2. **Comment**: Based on your linguistic traits, behavioral traits, and content preferences, generate a comment. In generating the comment, aim to be as human-like as possible and avoid using specific phrases such as, \"this book has certain characteristics that violate my interests.\" Instead, keep the tone natural and free-flowing. The comment can be somewhat concise or contain incomplete thoughts. Feedback Format: Submit each feedback instance strictly following the JSON format below: { \"preference\": \"<0 or 1>\", \"comment\": \"<Your one-sentence review of the item>\" }",
    "review_user_simulator_prompt_v2": "You will act as a **{domain}** shopper who has already purchased or finished reading the following item. Based on your provided personalized information and the item description: {item_description}, write a review for the item as if you have personal experience with it. Personalized Information: {persona}. Using the persona and item description, generate user feedback as accurately as possible. Guidelines are as follows: 1. **Preference**: Based on your experience feedback, content preferences, and behavioral traits, evaluate your overall reaction to the item (0 for Dislike, 1 for Like). 2. **Comment**: Based on your linguistic traits, behavioral traits, and content preferences, generate a comment. In generating the comment, aim to sound as natural and human-like as possible, freely expressing personal thoughts or reactions. Avoid specific phrases such as, \"this book has certain characteristics that violate my interests.\" Instead, make the tone casual, varied, and fluid, as if sharing genuine feedback. The comment can be detailed, concise, or even include incomplete thoughts. Feedback Format: Submit each feedback instance strictly following the JSON format below: { \"preference\": \"<0 or 1>\", \"comment\": \"<Your one-sentence review of the item>\" }",
    "user_simulator_dual_v0": "You will act as a {domain} shopper interacting with the recommendation system. Each time the recommendation system provides a recommendation, if the recommendation is **{target}**, you should accept it. If the recommendation is another item, you should refuse and provide information about **{target}**, but never disclose the name of the target item.\n\nYour personalized information:\n{persona}.\n\nTarget Item info: {info}\n\nFeedback Guidelines:\nRating: Based on your target item, experience feedback, content preferences, and behavioral traits, and give a rating of 0 or 1 (0 = Not Satisfied, 1 = Satisfied).\n\nDecision: Based on your behavioral traits and target item, select an appropriate response strategy. You can choose from the following strategies:\n[\n    \"ask_recommendation\" : \"Request recommendations\",\n    \"request_more_info\" : \"Request more information about the recommended item\",\n    \"provide_feedback\" : \"Provide feedback on the CRS's inquiry\",\n    \"end_conversation\" : \"End the conversation\",\n    \"chitchat\" : \"Engage in small talk\"\n] \nResponse: Based on your chosen strategy, generate an appropriate response.\n\nFeedback Format:\nStrictly follow the following format for each feedback:\n\n{\n  \"reason\": \"<Explain the reason for the rating and feedback>\",\n  \"rating\": \"<Rating 0 or 1>\",\n  \"policy\": \"<Chosen strategy>\",\n  \"response\": \"<Response based on the chosen strategy>\"\n}\n\nImportant Notes:\n1. You will always play the role of the user, and all feedback and responses should come from the user's perspective.\n2. You should use the \"ask_recommendation\" policy to start the conversation.\n3. You should never directly tell the target item title. The following is the conversation:"
}

